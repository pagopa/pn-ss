openapi: 3.0.3
info:
  title: >-
    SafeStorageInternal
  version: v1.0
  license:
    name: PN software license
    url: 'https://www.pn.pagopa.it/LICENSE'
  description: >-
    __SafeStorageInternal__: CRUD interne

servers:
  - url: >-
      https://api.pn.pagopa.it
    description: Server url
tags:
  - name: docTypeInternal
    description: Tipo Documento
  - name: documentInternal
    description: Documenti
  - name: userConfigurationInternal
    description: Anagrafica Client
paths:

  ################################################################################################
  ###                                      CONFIGURAZIONI                                      ###
  ################################################################################################
  '/safestorage/internal/v1/doctypes/{typeId}':
    get:
      operationId: getDocType
      summary: Restituisce una tipologia di documento.
      tags:
        - docTypeInternal
      parameters:
        - $ref: '#/components/parameters/typeId'
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeResponse'
    put:
      operationId: updateDocType
      summary: Aggiorna una tipologia di documento.
      tags:
        - docTypeInternal
      parameters:
        - $ref: '#/components/parameters/typeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentType'
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeResponse'
    delete:
      operationId: deleteDocType
      summary: Elimina una tipologia di documento.
      tags:
        - docTypeInternal
      parameters:
        - $ref: '#/components/parameters/typeId'
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeResponse'

  '/safestorage/internal/v1/doctypes':
    post:
      operationId: insertDocType
      summary: Inserisce una nuova tipologia di documento.
      tags:
        - docTypeInternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentType'
      responses:
        '403':
          description: Forbidden
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeResponse'

  '/safestorage/internal/v1/documents/{documentKey}':
    get:
      operationId: getDocument
      summary: Restituisce un documento.
      tags:
        - documentInternal
      parameters:
        - $ref: '#/components/parameters/documentKey'
      responses:
        '404':
          description: Not configured
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
    patch:
      operationId: patchDoc
      summary: Aggiorna un documento.
      tags:
        - documentInternal
      parameters:
        - $ref: '#/components/parameters/documentKey'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentChanges'
      responses:
        '404':
          description: Not configured
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
    delete:
      operationId: deleteDocument
      summary: Elimina un documento.
      tags:
        - documentInternal
      parameters:
        - $ref: '#/components/parameters/documentKey'
      responses:
        '404':
          description: Not configured
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'

  '/safestorage/internal/v1/documents':
    post:
      operationId: insertDocument
      summary: Inserisce una nuovo documento.
      tags:
        - documentInternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentInput'
      responses:
        '404':
          description: Not configured
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'

  '/safestorage/internal/v1/userConfigurations/{name}':
    get:
      operationId: getUserConfiguration
      summary: Restituisce una anagrafica client.
      tags:
        - userConfigurationInternal
      parameters:
        - $ref: '#/components/parameters/name'
      responses:
        '404':
          description: Not configured
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConfigurationResponse'
    patch:
      operationId: patchUserConfiguration
      summary: Aggiorna una anagrafica client.
      tags:
        - userConfigurationInternal
      parameters:
        - $ref: '#/components/parameters/name'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConfigurationChanges'
      responses:
        '404':
          description: Not configured
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConfigurationResponse'
    delete:
      operationId: deleteUserConfiguration
      summary: Elimina una anagrafica client.
      tags:
        - userConfigurationInternal
      parameters:
        - $ref: '#/components/parameters/name'
      responses:
        '404':
          description: Not configured
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConfigurationResponse'

  '/safestorage/internal/v1/userConfigurations':
    post:
      operationId: insertUserConfiguration
      summary: Inserisce una nuova anagrafica client.
      tags:
        - userConfigurationInternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConfiguration'
      responses:
        '404':
          description: Not configured
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConfigurationResponse'

components:
  parameters:
    typeId:
      name: typeId
      description: Identificativo del tipo di documento
      in: path
      required: true
      schema:
        type: string
    documentKey:
      name: documentKey
      description: Identificativo del documento
      in: path
      required: true
      schema:
        type: string
    name:
      name: name
      description: Nome del client
      in: path
      required: true
      schema:
        type: string

  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
    DocumentType:
      type: object
      properties:
        tipoDocumento:
          type: string
          description: nome del tipo di documento
        checksum:
          description: >-
            codice di verifica del corretto caricamento del file
            https://aws.amazon.com/it/blogs/aws/new-additional-checksum-algorithms-for-amazon-s3/
          type: string
          enum: [ 'MD5', 'SHA256']
        initialStatus:
          type: string
        statuses:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CurrentStatus'
        informationClassification:
          description: >-
            * `C` - Confidential
            * `HC`- Highly Confidential </br>
            Se il valore Ã¨ HC il file deve essere criptato.</br>
            See [information classification](https://pagopa.atlassian.net/wiki/spaces/EN/pages/357204284/Data+Classification+Handling#Classificazione)
          type: string
          enum: [ 'C', 'HC' ]
        digitalSignature:
          type: boolean
        timeStamped:
          type: string
          enum: [ 'NONE', 'STANDARD' ]
    CurrentStatus:
      type: object
      properties:
        allowedStatusTransitions:
          $ref: '#/components/schemas/AllowedStatusTransitions'
        storage:
          $ref: '#/components/schemas/Storage'
        technicalState:
          $ref: '#/components/schemas/TechnicalState'
    Storage:
      type: string
    AllowedStatusTransitions:
      type: array
      items:
        type: string
    TechnicalState:
      type: string
    DocumentTypeResponse:
      type: object
      properties:
        docType:
          $ref: '#/components/schemas/DocumentType'
        error:
          $ref: '#/components/schemas/Error'
    Document:
      type: object
      properties:
        documentKey:
          type: string
        documentState:
          type: string
        retentionUntil:
          description: >-
            data di scadenza del file
          type: string
        checkSum:
          description:
            codice di verifica del corretto caricamento del file
            https://aws.amazon.com/it/blogs/aws/new-additional-checksum-algorithms-for-amazon-s3/
          type: string
          enum: [ 'MD5', 'SHA256']
        contentLenght:
          type: number
        contentType:
          type: string
        documentType:
          $ref: '#/components/schemas/DocumentType'
    DocumentInput:
      allOf:
        - $ref: '#/components/schemas/Document'
        - type: object
          properties:
            documentType:
              type: string
    DocumentResponse:
      type: object
      properties:
        document:
          allOf:
            - $ref: '#/components/schemas/Document'
            - type: object
              properties:
                documentType:
                  $ref: '#/components/schemas/DocumentType'
        error:
          $ref: '#/components/schemas/Error'
    DocumentChanges:
      type: object
      properties:
        documentState:
          type: string
        retentionUntil:
          description: >-
            data di scadenza del file
          type: string
        checkSum:
          description:
            codice di verifica del corretto caricamento del file
          type: string
          enum: [ 'MD5', 'SHA256']
        contentLenght:
          type: number
    UserConfiguration:
      type: object
      properties:
        name:
          type: string
        apiKey:
          type: string
        canCreate:
          type: array
          items:
            type: string
          description: Elenco dei tipi di documenti che il client Ã¨ autorizzato a creare.
        canRead:
          type: array
          items:
            type: string
          description: Elenco dei tipi di documenti che il client Ã¨ autorizzato a creare.
        signatureInfo:
          type: string
        destination:
          type: object
          description: Informazioni per contattare in modalitÃ  push i sistemi client.
          properties:
            sqsUrl:
              type: string
              description: URL della coda SQS a cui contattare il client
    UserConfigurationResponse:
      type: object
      properties:
        userConfiguration:
          $ref: '#/components/schemas/UserConfiguration'
        error:
          $ref: '#/components/schemas/Error'
    UserConfigurationChanges:
      type: object
      properties:
        canCreate:
          type: array
          items:
            type: string
          description: Elenco dei tipi di documenti che il client Ã¨ autorizzato a creare.
        canRead:
          type: array
          items:
            type: string
          description: Elenco dei tipi di documenti che il client Ã¨ autorizzato a creare.
        apiKey:
          type: string
        signatureInfo:
          type: string

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key

security:
  - ApiKeyAuth: [] # use the same name as under securitySchemes
